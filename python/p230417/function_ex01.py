"""
파이썬에서 함수는 재사용 가능한 코드 블록을 의미합니다. 함수는 특정 작업을 수행하기 위해 필요한 코드를 그룹화하고, 이름을 붙여서 쉽게 호출할 수 있게 해줍니다.

파이썬에서 함수를 정의할 때는 def 예약어를 사용합니다. 함수 이름 다음에는 괄호가 오며, 이 안에는 매개변수를 지정할 수 있습니다. 함수의 기능은 콜론(:) 다음에 오는 들여쓰기된 코드 블록으로 구현합니다. 함수가 결과를 반환해야 할 경우, return 예약어를 사용합니다.

다음은 간단한 함수의 예시입니다:
def greeting(name):
    return f"Hello, {name}!"

print(greeting("Alice")) # "Hello, Alice!" 출력
위 함수는 greeting이라는 이름으로 정의되며, name이라는 하나의 매개변수를 받습니다. 함수는 Hello, {name}!라는 문자열을 반환합니다. 함수를 호출할 때는 매개변수로 "Alice"를 전달하면 "Hello, Alice!"가 출력됩니다.

파이썬에서 함수는 다른 함수의 인수로 전달할 수 있습니다. 이러한 기능을 활용하면 함수를 더욱 유연하고 모듈화할 수 있습니다.

파이썬에서 함수를 정의하는 방법은 다음과 같습니다:
def 함수이름(매개변수):
    # 함수의 기능을 수행하는 코드 작성
    return 반환값
위 코드에서 def는 함수를 정의하기 위한 예약어입니다. 함수이름은 함수의 이름으로, 사용자가 임의로 지정할 수 있습니다. 매개변수는 함수가 실행될 때 입력으로 사용되는 값을 받는 변수입니다. 함수가 반환할 값을 return 예약어 다음에 지정합니다.

다음은 간단한 예시입니다:

def add_numbers(x, y):
    result = x + y
    return result
위 함수는 add_numbers라는 이름으로 정의되며, x와 y라는 두 개의 매개변수를 받아서 더한 후, 결과값을 반환합니다. 함수를 호출할 때는 add_numbers(2, 3)과 같이 사용할 수 있습니다. 이 경우 x에는 2가, y에는 3이 전달되어 함수가 실행되며, 결과값인 5가 반환됩니다.


함수 정의 매개변수 제한이 없어용 
def 함수명(매개변수, 매개변수):
    명령어
    명령어
    return 값

함수 호출 # 호출할때 정의하고 호출해줘야 되용
함수명 (인수1, 인수)

이중 콜론(::)은 파이썬에서 주로 다음과 같은 상황에서 사용됩니다:

클래스 정의에서 메서드를 정의할 때, 메서드 정의부에서 매개변수 다음에 : 대신 ::를 사용할 수 있습니다. 이 경우 ::는 self 매개변수를 생략할 수 있도록 해줍니다.

class MyClass:
    def my_method(self)::  # self 매개변수 생략
        print("Hello World!")
파이썬 3.10부터는 타입 힌팅(Type Hinting)에서 사용됩니다. 함수나 메서드를 정의할 때, 매개변수의 타입이나 반환값의 타입을 주석으로 지정할 수 있습니다. 이 때 -> 대신 ::를 사용합니다.
def my_function(x: int, y: int) -> int::  # 반환값의 타입을 int로 지정
    return x + y
이렇게 지정된 타입 힌트는 IDE나 코드 리뷰 도구에서 코드의 가독성을 높이고 디버깅을 도와주는 역할을 합니다. 하지만 이것은 타입 검사를 강제하지는 않으므로, 런타임 오류는 여전히 발생할 수 있습니다.
"""

#함수 정의
#[함수 정의 형태] 매개변수 있고, 리턴 없어
print("1. ##")
def increment(num):
    num = num +1
    print("1증가 했져 ?" ,num)
print("2. ##")
#위 정보를 가지고 아래로 호출해줘
#함수 호출해줘! :: 함수를 호출할때 넣어주는 것을 인수라고 해용
increment(22)

print("3. ##")
#반드시 호출하면 return 해용