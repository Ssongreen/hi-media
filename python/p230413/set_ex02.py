s1 = {2,4,6,8}
s2 = {1,2,3,4,5}

# 교집합
# 새로운 집합을 반환하며, intersection() 메서드는 현재 집합을 변경하지 않고 교집합을 반환합니다. 그리고 & 연산자는 집합 이외에도 다른 자료형에서도 사용할 수 있지만, intersection() 메서드는 집합(set)에서만 사용할 수 있습니다.
print("교집합 : 연산자 >>", s1&s2)
#함수
print("교집합 : 함수 >>", s1.intersection(s2))

# 합집합
# 연산자 : | 연산자는 새로운 집합을 반환하며, union() 메서드는 현재 집합을 변경하지 않고 합집합을 반환합니다. 그리고 | 연산자는 집합 이외에도 다른 자료형에서도 사용할 수 있지만, union() 메서드는 집합(set)에서만 사용할 수 있습니다.
print("합집합 : 연산자 >> ",s1|s2)
#함수
print("합집합 : 함수 ?? ", s1.union(s2))
#차집합
# 연산자 : - 연산자는 새로운 집합을 반환하며, difference() 메서드는 현재 집합을 변경하지 않고 차집합을 반환합니다. 그리고 - 연산자는 집합 이외에도 다른 자료형에서도 사용할 수 있지만, difference() 메서드는 집합(set)에서만 사용할 수 있습니다.
print("차집합 : 연산자 " ,s1 - s2)
#함수
print("합집합 : 함수 >>? ", s1.difference(s2) )